// Generated using `moon info`, DON'T EDIT IT
package "ShellWen/dotenv"

// Values
fn load(path? : String, ignore_file_not_found? : Bool) -> EnvMap raise DotenvError

fn load_and_modify(path? : String, ignore_file_not_found? : Bool) -> EnvMap raise DotenvError

fn[R, E : Error] temp_env(Map[String, String], () -> R raise E) -> R raise E

// Errors
pub suberror DotenvError {
  FileNotFound(String)
  LineParseError(String, UInt)
  Io(Error, String)
  InvalidOp
}

pub suberror ParseBufError {
  LineParse(String, UInt)
}

// Types and methods
pub struct EnvLoader {
  mut path : String?
  // private fields
}
fn EnvLoader::from_path(String) -> Self raise DotenvError
fn EnvLoader::from_string(String) -> Self
fn EnvLoader::load(Self) -> EnvMap raise DotenvError
fn EnvLoader::load_and_modify(Self) -> EnvMap raise DotenvError
fn EnvLoader::set_path(Self, String?) -> Self
fn EnvLoader::set_sequence(Self, EnvSequence) -> Self

type EnvMap
fn EnvMap::get(Self, String) -> String?

pub(all) enum EnvSequence {
  EnvOnly
  EnvThenInput
  InputOnly
  InputThenEnv
}
impl Default for EnvSequence

// Type aliases

// Traits

